TROUBLESHOOTING GUIDE
====================

LATEST UPDATE: File-Based Storage Solution
-------------------------------------------

ISSUE: Session cookie size limit (4KB max, was 7.6MB)
STATUS: ✅ COMPLETELY FIXED

NEW SOLUTION:
- Blog posts now stored in temp_posts/ directory as JSON files
- Only small post ID stored in session (few bytes vs 7.6MB)
- Automatic cleanup of files older than 24 hours
- Works with or without database
- No size limitations

BENEFITS:
✅ No session cookie errors
✅ Handle posts of any size
✅ Multiple images no problem
✅ Fast and reliable
✅ Automatic cleanup

TECHNICAL DETAILS:
- temp_posts/ directory created automatically
- Each post gets unique UUID filename
- Files auto-deleted after 24 hours
- JSON format for easy debugging
- Added to .gitignore

ISSUE 1: Session Cookie Too Large (LEGACY)
----------------------------------

ERROR: "The 'session' cookie is too large: the value was 7919459 bytes..."

SOLUTION: Fixed by splitting images into separate session storage.
- Images now stored in session['blog_images'] separately
- Main data in session['blog_data']
- Automatically merged when displaying

STATUS: ✅ FIXED

ISSUE 2: Supabase API Key Error
--------------------------------

ERROR: "Invalid API key" or "JSON could not be generated"

CAUSE: SUPABASE_KEY in .env is incorrect or not set

SOLUTIONS:

Option A - Fix Supabase (Recommended if you want history/analytics):

1. Check your .env file:
   SUPABASE_URL=https://your-project-id.supabase.co
   SUPABASE_KEY=your-actual-anon-key

2. Get correct key from Supabase Dashboard:
   - Go to https://supabase.com
   - Select your project
   - Go to Settings > API
   - Copy "anon" key (NOT service_role key)
   - Update .env file

3. Restart Flask app

Option B - Disable Database (App works without it):

The app now gracefully handles database errors:
- Posts still generate successfully
- History/Analytics won't work
- All other features work fine

To disable database warnings:
- Comment out or remove SUPABASE_URL and SUPABASE_KEY from .env
- App will work without database features

STATUS: ✅ MADE NON-BLOCKING - App works with or without valid Supabase

ISSUE 3: 500 Error - Generation Fails
--------------------------------------

ERROR: "POST /generate HTTP/1.1" 500

MOST COMMON CAUSE: No AI provider API keys configured

SOLUTION:

1. Check your .env file has at least ONE of these:
   OPENAI_API_KEY=sk-...
   ANTHROPIC_API_KEY=sk-ant-...
   OPENROUTER_API_KEY=sk-or-...

2. Verify the key is valid:
   - Not expired
   - Has credits/balance
   - Correct format

3. Restart Flask app after adding keys

4. Check console output for:
   ✓ OpenAI configured
   ✓ Gemini configured  
   ✓ Anthropic configured
   ✓ OpenRouter configured

If you see NO checkmarks, no providers are configured!

RECOMMENDED SETUP:

Easiest: Use OpenRouter (works immediately)
1. Get key from https://openrouter.ai
2. Add to .env: OPENROUTER_API_KEY=sk-or-...
3. Restart app
4. Select DeepSeek model (cheap and fast)

Alternative: Use OpenAI
1. Get key from https://platform.openai.com
2. Add to .env: OPENAI_API_KEY=sk-...
3. Restart app
4. Use default GPT-4o model

STATUS: ✅ FIXED - Better error messages now guide you

ISSUE 4: Generate Button Shows "Failed to fetch"
-------------------------------------------------

CAUSE: Usually due to large session cookies

SOLUTION: Already fixed by splitting images from session data

If still occurs:
- Clear browser cache
- Try incognito/private window
- Restart Flask app

GENERAL TIPS
------------

1. If app crashes, check console for specific error
2. Database errors are now warnings, not failures
3. App works perfectly without Supabase (just no history)
4. Images are base64 encoded, so posts are self-contained

WHAT WORKS WITHOUT DATABASE
---------------------------

✅ Generate blog posts
✅ View generated posts
✅ Copy to clipboard
✅ Download markdown
✅ Edit & regenerate
✅ SEO analysis
✅ AI models (GPT-4, DeepSeek, Gemini, Claude)
✅ Image generation
✅ Export to platforms

❌ Post history (requires database)
❌ Analytics dashboard (requires database)
❌ View previous posts (requires database)

TESTING
-------

1. Generate a test post
2. Check if it displays properly
3. Try edit & regenerate feature
4. Copy/download should work
5. Check console for warnings (not errors)

If you see warnings about database, that's normal if Supabase isn't configured.

SUCCESS INDICATORS
------------------

✅ Post generates successfully
✅ Images display
✅ Metrics show correctly
✅ Edit panel works
✅ No session cookie size errors
✅ App doesn't crash

RESTART INSTRUCTIONS
--------------------

After fixing .env:

1. Stop Flask app (Ctrl+C)
2. Restart: python app.py
3. Clear browser cache
4. Try generating a post

CONTACT
-------

If issues persist:
- Check all .env variables are set correctly
- Verify API keys are valid
- Try different AI model
- Check internet connection
- Review console logs
